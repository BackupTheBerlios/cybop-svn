hallo

Darstellungsmöglichkeiten
-------------------------

- reines HTML mit Funktionalität Java-Script
- xml mit Formatierung xls
- Servlet (Serverseitig)
- Web Forms 2.0 ?
- XForms?
- UIML
- XUL

Probleme 
--------
- Interaktionen der Anwendung mit dem Datenbestand
- Transaktionsicherheit 


CYBOP
-----

- Beispeil für Datenmodell und Anwenderlogik
- Doku zur Anwednungslogik des CYPOB-Model
- Doku zum Modell des CYPOB-Model

Trennung Inhalt Darstellung?

Im Modell sind soweit ich verstanden habe Inhalt und Darstellung zusammgefasst.

Umfang der dargestlllten Elemente 
Die Darstellung im Client ist ja vom Clientprogramm abhängig. Das heist, eine Swing-Anwendung ist anders strukturiert als eine Web-Anwendung.
Welche Elemente sollen dargestellt
z.B. XUL - Umfang von XUL bestimmt Umfang

- Ausgabemedien bestimmen die Beschreibung der Oberfläche
- Im CYBOP - Modell muss sich auf kleinesten gemeinsamen Nenner der der Ausgabenedien geeinigt werden


XUL-Gedanken
------------

im prizip ist XUL eine universielle Beschreibung der Oberfläche - Diese wird dann durch eine Engine in das jeweilige Ausgabemedium übertragen. 

Im prizip mache wir das doch auch in CYPOB. D.H. wir transformieren eine Universelle Beschreibung in die nächste Universelle Beschreibung. Wenn ich es richtig verstanden habe, soll doch der Interpreter schon das Ausgabemedium bedienen. 

Ansonsten könnte es ja einen Interprteter geben, der diese XUL erstellt und der rest wird mit der Allgemienen Entwicklung der XUL-Engines der Opensource-bewegung umgesetzt




Opera und Mozialla Standard bei W3c eingereicht

Web Forms 2.0
Erweiterung von HTML für Forluare (Datumsfelder, Clientvalidierung,...)
Die WHATWG bittet um Kommentare zum ersten stabilen Entwurf von Web Forms 2.0. Diese Spezifikation stellt eine Erweiterung des aus HTML 4 bekannten Formular-Modells dar, dazu gehören unter anderem neue Eingeabefelder für Datum, Zeit, E-Mail Adressen und Zahlen, ein neues Validierungsmodell zur Überprüfung von Formular-Inhalten auf dem Client, Möglichkeiten, um Felder als notwendig zu markieren, die Kontrolle über den Versand, damit nicht die komplette Seite neu geladen wird und vieles andere mehr

Ähnliches Von MicroSoft
XAML

W3C
XForms
http://www.w3.org/ -- 14. Oktober 2003 -- Das World Wide Web Consortium (W3C) kündigt heute die Freigabe der XForms 1.0 Recommendation an. XForms 1.0 ist der Grundstein für eine neue Generation von Web-basierten Formularen, die die Fähigkeit besitzen, Zwecke, Presentation und Ergebnisse mit Hilfe der Extensible Markup Language (XML) zu trennen. 
Eine W3C Recommendation entspricht einem Web-Standard und bedeutet, dass diese vom W3C entwickelte Spezifikation stabil ist, zur Interoperabilität des Webs beiträgt, von der W3C-Mitgliederschaft begutachtet worden ist und für eine Übernahme durch die Industrie befürwortet worden ist.
XForms 1.0 Web Formulare
Neuer Standard von W3C veröffentlicht. 
Mit XForms1.0 verabschiedete W3C, das World Wide Web Consortium neulich die Regelungen für Formulardesign auf Basis von XML. Die bestehenden HTML Formular Richtlinien wurden 1993 entwickelt und werden inzwischen zig-fach im Internet genutzt. Strategie hinter der neuen Regelung XForms ist es die Interaktivität von Formularen zu erhöhen. Anstatt wie bisher in Javascript, sollen u.a. für den Einsatz bei Handys Feldtypen, Werteprüfungen, etc. zu mehr Komfort führen.

XUL-Motors
Luxor?
Gecko-Engine (Firefox, Mozilla)
Opera
Gecko-Engine und Luxor haben unterschiedlichen Umfang der XUL-Generierung

UIML
Es gibt kein Opensource zur Genrierung für Webdarstellung
UIML dient zur Beschreibung von Nutzerschnittstellen, unabhängig von der gewünschten Zielplattform. So soll es möglich sein, eine abstrakte Beschreibung in UIML nach HTML, WML, VoiceXML, Java-Applets, etc. zu übersetzen. Ebenso kann die Verbindung zur dahinterliegenden Serverlogik beschrieben werden. 
9. August 2000: Link aufgenommen

Bei einer GuiBeschreibungssprache handelt es sich um eine Notation zur Definition von Benutzeroberflächen. Aus diesen Beschreibungen werden dann die GUIs in der Zielsprache generiert, also in Java, HTML, TCL, ... . Der Vorteil einer Beschreibungssprache ist, daß die GUI dann auf jeder beliebigen Plattform in jeder beliebigen Sprache konsistent erzeugt werden kann. Da die Beschreibungsprachen keinen minimalen Subset definieren, können bestehende GUIs in die jeweilige Beschreibungssprache überführt werden. 

Beschreibungssprachen: 
User Interface Markup Language (UIML) 
Spezifikation 
Einführung 
Nachteile: 
Mir sind zur Zeit nur kommerzielle Programme zur Umsetzung der Beschreibungssprache in eine Benutzeroberfläche bekannt 

XML based User Interface Language (XUL) 
XUL wurde von MozillaProject und Netscape entworfen. Daher können die Dateien auch direkt mit Mozilla angezeigt werden, wenn die Module installiert sind 
Tutorial
    