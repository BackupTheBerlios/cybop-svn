<model>
<!--
    <part name="interrupt_x_window_system" channel="inline" abstraction="operation/plain" model="interrupt">
        <property name="service" channel="inline" abstraction="text/plain" model="x-window-system"/>
    </part>
-->
<!--
    <part name="interrupt_gnu_linux_console" channel="inline" abstraction="operation/plain" model="interrupt">
        <property name="service" channel="inline" abstraction="text/plain" model="gnu-linux-console"/>
    </part>
-->
<!--
    <part name="shutdown_x_window_system" channel="inline" abstraction="operation/plain" model="shutdown">
        <property name="service" channel="inline" abstraction="text/plain" model="x-window-system"/>
    </part>
-->
<!--
    <part name="shutdown_gnu_linux_console" channel="inline" abstraction="operation/plain" model="shutdown">
        <property name="service" channel="inline" abstraction="text/plain" model="gnu-linux-console"/>
    </part>
-->
<!--
    CAUTION! The memory MUST NOT be destroyed here!
    Otherwise, also THIS model is destroyed in memory so that the exit operation below cannot
    be executed anymore.
    If CYBOI runs as operating system one day, the exit operation will only be called
    when the whole operating system is shutdown. At this time, the "destroy_ui_control"
    operation HAS TO BE REACTIVATED and called as final operation cleaning up the memory
    instances of the Res Medicinae application. But as long as CYBOI does not run as
    operating system and each application is started with its own instance of CYBOI,
    the exit operation is the last one to be called. It cleans up all memory, too.
    <part name="destroy_ui_control" channel="inline" abstraction="operation/plain" model="destroy_part">
        <property name="name" channel="inline" abstraction="path/knowledge" model=".ui_control"/>
    </part>
-->
    <part name="clean_tui" channel="inline" abstraction="operation/plain" model="send">
        <property name="channel" channel="inline" abstraction="text/plain" model="gnu-linux-console"/>
        <property name="clean" channel="inline" abstraction="logicvalue/boolean" model="true"/>
    </part>
    <part name="exit_application" channel="inline" abstraction="operation/plain" model="exit"/>
</model>

<!--
    Copyright (C) 1999-2009. Christian Heller.

    This file is part of the Cybernetics Oriented Interpreter (CYBOI).
    It represents an example knowledge model,
    and is written in the Cybernetics Oriented Language (CYBOL).

    CYBOI is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    CYBOI is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with CYBOI.  If not, see <http://www.gnu.org/licenses/>.

    Cybernetics Oriented Programming (CYBOP) <http://www.cybop.org>
    Christian Heller <christian.heller@tuxtax.de>

    @version $RCSfile: shutdown.cybol,v $ $Revision: 1.10 $ $Date: 2009-01-31 16:06:29 $ $Author: christian $
    @author Christian Heller <christian.heller@tuxtax.de>
/-->
