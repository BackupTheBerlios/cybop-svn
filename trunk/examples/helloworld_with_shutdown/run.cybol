<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
    $RCSfile: run.cybol,v $

    Copyright (c) 1999-2005. Christian Heller and the CYBOP developers.

    This knowledge model is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This knowledge model is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this knowledge model; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

    http://www.cybop.net
    - Cybernetics Oriented Programming -

    @version $Revision: 1.1 $ $Date: 2005-04-15 13:16:13 $ $Author: christian $
    @author Christian Heller <christian.heller@tuxtax.de>
/-->

<!--
    This example creates a small, hierarchical domain model consisting
    of a compound called "domain" and its part called "greeting".
    The greeting model contains the famous "Hello, World!" string.

    As next step, the greeting model is sent to (printed on) the console.
    Finally, an "exit" operation shuts down the application.
/-->

<model>
    <part name="startup" channel="inline" abstraction="operation" model="send">
        <property name="language" channel="inline" abstraction="string" model="signal"/>
        <property name="message" channel="file" abstraction="cybol" model="helloworld_with_shutdown/startup.cybol"/>
    </part>
    <part name="send_greeting" channel="inline" abstraction="operation" model="send">
        <property name="language" channel="inline" abstraction="string" model="signal"/>
        <property name="message" channel="inline" abstraction="knowledge" model="logic.send_greeting"/>
    </part>
    <part name="shutdown" channel="inline" abstraction="operation" model="send">
        <property name="language" channel="inline" abstraction="string" model="signal"/>
        <property name="message" channel="inline" abstraction="knowledge" model="logic.shutdown"/>
    </part>
</model>
