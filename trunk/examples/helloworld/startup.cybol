<model>
    <!-- Since the "whole" property is not given the greeting model is added to the knowledge memory root. -->
    <part name="create_greeting" channel="inline" abstraction="operation/plain" model="create">
        <property name="name" channel="inline" abstraction="text/plain" model="greeting"/>
        <property name="abstraction" channel="inline" abstraction="text/plain" model="memory/compound"/>
        <property name="element" channel="inline" abstraction="text/plain" model="part"/>
    </part>
    <part name="receive_greeting" channel="inline" abstraction="operation/plain" model="receive">
<!--
        <property name="channel" channel="inline" abstraction="text/plain" model="file"/>
        <property name="language" channel="inline" abstraction="text/plain" model="text/cybol"/>
        <property name="message" channel="inline" abstraction="text/plain" model="helloworld/greeting.cybol"/>
-->
        <property name="channel" channel="inline" abstraction="text/plain" model="inline"/>
        <property name="language" channel="inline" abstraction="text/plain" model="text/plain"/>
        <property name="message" channel="inline" abstraction="text/plain" model="blubla-hello!"/>
        <property name="model" channel="inline" abstraction="path/knowledge" model=".greeting"/>
    </part>
    <part name="startup_gnu_linux_console" channel="inline" abstraction="operation/plain" model="startup">
        <property name="service" channel="inline" abstraction="text/plain" model="gnu_linux_console"/>
    </part>
    <!-- Write knowledge tree into file. This is only for testing reasons and can also be deleted. -->
    <part name="send_greeting_to_output" channel="inline" abstraction="operation/plain" model="send">
        <property name="channel" channel="inline" abstraction="text/plain" model="gnu_linux_console"/>
        <property name="message" channel="inline" abstraction="path/knowledge" model=".greeting"/>
        <property name="clean" channel="inline" abstraction="logicvalue/boolean" model="true"/>
    </part>
    <part name="test_knowledge_tree" channel="inline" abstraction="operation/plain" model="send">
        <property name="channel" channel="inline" abstraction="text/plain" model="file"/>
        <property name="language" channel="inline" abstraction="text/plain" model="model_diagram"/>
        <property name="message" channel="inline" abstraction="path/knowledge" model=".greeting"/>
        <property name="receiver" channel="inline" abstraction="text/plain" model="TEST_HELLOWORLD.txt"/>
    </part>
    <part name="shutdown_gnu_linux_console" channel="inline" abstraction="operation/plain" model="shutdown">
        <property name="service" channel="inline" abstraction="text/plain" model="gnu_linux_console"/>
    </part>
    <part name="destroy_greeting" channel="inline" abstraction="operation/plain" model="destroy">
        <property name="model" channel="inline" abstraction="path/knowledge" model=".greeting"/>
    </part>
    <part name="exit_application" channel="inline" abstraction="operation/plain" model="exit"/>
</model>

<!--
    Copyright (C) 1999-2009. Christian Heller.

    This file is part of the Cybernetics Oriented Interpreter (CYBOI).
    It represents an example knowledge model,
    and is written in the Cybernetics Oriented Language (CYBOL).

    CYBOI is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    CYBOI is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with CYBOI.  If not, see <http://www.gnu.org/licenses/>.

    Cybernetics Oriented Programming (CYBOP) <http://www.cybop.org>
    Christian Heller <christian.heller@tuxtax.de>

    @version $RCSfile: startup.cybol,v $ $Revision: 1.20 $ $Date: 2009-01-09 00:36:13 $ $Author: christian $
    @author Christian Heller <christian.heller@tuxtax.de>
/-->
