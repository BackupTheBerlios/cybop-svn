
CYBOI-Java Comparison
=====================

memoriser
_________

+ allocate: malloc, new, constructor, create, DDL CREATE TABLE
+ reallocate: trimToSize
+ deallocate: free, delete, destructor, destroy, DDL DROP TABLE

copier
______

+ copy: assign, place, copy, duplicate, copyValueOf, clone, SQL UPDATE

modifier
________

+ get_element: element, elementAt, charAt, codePointAt, retrieve, getChildAt, firstElement, lastElement, peek, first, lowest, last, highest, SQL SELECT

+ insert
+ insert_element: SQL INSERT, DDL ALTER TABLE

+ overwrite: set, append, add, push, put, offer, concat, appendAll, putAll, replace
+ overwrite_element: set

+ remove: delete, SQL DELETE, DDL ALTER TABLE, clear, empty

- sort_parts_by_name(destination container, source container)
- trim(character array): [delete all spaces preceding and following the string]
- reverse(character array) [reverse sequence]

--> based on "copy"
--> count and size adjusted automatically
--> meta elements are accessed via overwrite_element and insert_element
--> cyboi works with references/pointers only
--> even for primitive values an array with just one element exists
--> if a reference is to be retrieved (get), then the pointer array abstraction
    is used, so that not the actual values, but only a reference to them is returned

comparator
__________

+ compare

- compare_all: equals, ceiling, floor, higher, lower, equalsIgnoreCase
- compare_prefix: startsWith
- compare_suffix: endsWith
- compare_contain: containsAll

- ??: compareTo (lexicographically, i.e. position in ASCII/Unicode table)

- compare_ignore_case

finder
______

- find: links to "find_first" by default, same as "find_part"
- find_first_index: indexOf, contains, containsKey, containsValue, find, search
- find_last_index: lastIndexOf
- find_prefix (find that begins at index 0)
- find_suffix (find that begins at last index and counts backward)

- filter(regular expression): matches

converter
_________

- decode: valueOf
- encode: toString
- encode_capitalisation_lower: toLowerCase
- encode_capitalisation_upper: toUpperCase

COMPOSITION
___________

- remove_first_element(element) = find_first_index + remove_element
- remove_last_element(element) = find_last_index + remove_element
- pop = poll = take = get_first_element + remove_first_element
- replace_elements(container, old element, new element) = loop + find_first_index + set_element

- move: COMPOSITION? = get(old container, index) + set(new container, element, index at end) + remove(old container, index)
- move_element(destination container, source container, source element index)
- move_element_by_name(destination container, source container, source element name)
- move_area(destination container, source container, source start index, source end index): drainTo
- move_elements(destination container, source container): drainTo
- move_signals(destination container, source container): drainTo
- move_parts(destination container, source container): drainTo

SUPERFLUOUS
___________

- hashCode:
  typically (e.g. in Java) implemented by converting the internal address of the object into an integer;
  CYBOI works with pointers anyway, so that distinct objects are identifiable

- getChildCount, length, capacity, isEmpty, size, setSize:
  elements are accompanied by a count and size by default

- subSequence, substring:
  it suffices to simply count up the pointer to the desired sub sequence of an array
