#
# $RCSfile: source_structure.txt,v $
#
# Copyright (c) 1999-2007. Christian Heller and the CYBOP developers.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# http://www.cybop.net
# - Cybernetics Oriented Programming -
#
# @version $Revision: 1.10 $ $Date: 2007-05-31 22:11:22 $ $Author: christian $
# @author Christian Heller <christian.heller@tuxtax.de>
#

Container Hierarchy
___________________

value
offset_value
array
item = data + count + size (all of type array)
part = name + abstraction + model + details (all of type item)

value
offset_value
array
fraction
structure

A part's model may reference primitive data (integer etc.) or another model,
just like one database table may reference another.

The compound is NOT a structure any longer, but just a simple pointer array!
It stores parts which contain the necessary meta data (name, abstraction, model, details).

Two solutions were considered for implementing the cyboi knowledge schema:
1 OLD: The four columns are kept as pointer arrays and have to be handed
  over as parametres from function to function, whenever a part is to be
  manipulated.
  Advantage: fast access, especially when comparing fields of two parts
  Disadvantage: tedious handling due to many parametres
2 NEW: A part structure keeps the four fields belonging to the part.
  The compound is nothing than one single pointer array keeping
  references to the parts.
  Advantage: easy handling, only one part parametre has to be forwarded
  Disadvantage: worse performance when reading and comparing part fields,
  since these cause an additional pointer access for each part.

Set and Get
___________

There are no set/get functions available, because they are not necessary.
Setting an element may be achieved via the "copy" function.
Getting a container element is done via pointer array and
delivers just a reference to the desired element.

For arrays, just one "copy" function is provided.
The source and destination array depend on the order of parametres given.

For container structures like:
- item (data, count, size)
- part (name, abstraction, model, details),
TWO versions of a "copy" function are provided:
- one for copying a complete container
- another one for copying just one container element.

Old CYBOI Names
_______________

item: formerly called model

Introduction
____________

The "Cybernetics Oriented Interpreter" (CYBOI) works on a rather low
system level. It manages the storage of knowledge (data = states and
operations = logic) in memory, contains input/ output (i/o) mechanisms,
handles signals and more.

Because of CYBOI's closeness to hardware, the "von Neumann" model was chosen
to structure its source code. Von Neumann's original model suggests three
main parts, which are listed together with their pendants in CYBOI, below:

------------------------------------------------------------------------
von Neumann                         | CYBOI
------------------------------------------------------------------------
Control Unit                        | controller (coordinates program flow)
Memory                              | executor (low-level states and logic)
Algorithmic Logic Unit (ALU)        | applicator (applies logic to states)
------------------------------------------------------------------------

The logic operations used by the applicator serve as interface to CYBOL.
In other words, CYBOL knowledge templates may only use operations offered
by the applicator.
