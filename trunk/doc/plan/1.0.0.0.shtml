<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <!--
        $RCSfile: 1.0.0.0.shtml,v $

        Copyright (c) 2002-2007. Christian Heller and the CYBOP developers.

        Permission is granted to copy, distribute and/or modify this document
        under the terms of the GNU Free Documentation License, Version 1.1
        or any later version published by the Free Software Foundation;
        with no Invariant Sections, with no Front-Cover Texts and with no Back-Cover
        Texts. A copy of the license is included in the section entitled
        "GNU Free Documentation License".

        http://www.cybop.net
        - Cybernetics Oriented Programming -
    /-->
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    <meta name="date" content="$Revision: 1.4 $ $Date: 2009-01-24 12:02:12 $ $Author: christian $">
    <meta name="author" content="Christian Heller christian.heller@tuxtax.de">
    <link rel="stylesheet" type="text/css" href="../cybop.css"/>
    <title>CYBOP 1.0.0.0</title>
</head>
<body>
    <div id="page">
        <!--#include virtual="../menu.inc" -->
        <h1>CYBOP 1.0.0.0</h1>
        <table>
            <tr>
                <td>
                    <table>
                    <tr>
                        <th width="10"/>
                        <th>
                            Features
                        </th>
                        <th width="250">
                            Developer
                        </th>
                    </tr>
                    <tr bgcolor="#000000">
                        <td bgcolor="#FF8080"/>
                        <td align="left" valign="top">
                            <h2>CYBOI</h2>
                            <ul>
                                <li>Check for user/ group permission at every access to knowledge memory</li>
                                <li>Implement CYBOL serialisation and persistence handling</li>
                                <li>Implement RPC communication</li>
                                <li>Implement HXP communication</li>
                                <li>Implement CORBA (Healthcare/ HDTF/ CORBAmed) communication</li>
                                <li>Implement SOAP communication</li>
                                <li>Implement HL7 Message communication</li>
                                <li>Implement HL7 <i>Clinical Document Architecture</i> (CDA) communication</li>
                                <li>Implement DICOM communication</li>
                                <li>Use colors for log messages on console (see SuSE Linux logs:
                                    <i>Doing action ... ok (green)/failed (red)</i>,
                                    <i>ok</i> on the right side of the screen)</li>
                                <li>Implement translation of other models (files in various formats),
                                    e.g. XML, OpenDocument, SXW (OpenOffice), HXP (Healthcare Exchange Protocol) etc.
                                    All of these are translated into memory-internal compound models.</li>
                                <li>Burn parts into hardware chip</li>
                            </ul>
                        </td>
                        <td align="left" valign="top">
                            Christian Heller<br>
                            &lt;<a href="mailto:christian.heller@tuxtax.de">christian.heller@tuxtax.de</a>&gt;<br>
                        </td>
                    </tr>
                    <tr bgcolor="#000000">
                        <td bgcolor="#FF8080"/>
                        <td align="left" valign="top">
                            <h2>CYBOL</h2>
                            <ul>
                                <li>Rename <i>knowledge</i> to <i>pointer</i> and <i>encapsulated</i> to <i>pointer_pointer</i>?</li>
                                <li>Think through ontology (package structure) once more</li>
                                <li>Implement <i>start_progress</i> and <i>stop_progress</i> action
                                    to set <i>Wait</i> cursor at beginning and end of <i>handle</i></li>
                                <li>Implement <i>login</i> at system startup</li>
                                <li>Implement <i>UnDo</i> functionality; see design patterns <i>Command</i> and <i>Memento</i></li>
                            </ul>
                        </td>
                        <td align="left" valign="top">
                            Christian Heller<br>
                            &lt;<a href="mailto:christian.heller@tuxtax.de">christian.heller@tuxtax.de</a>&gt;<br>
                        </td>
                    </tr>
                    <tr bgcolor="#000000">
                        <td bgcolor="#FFFFC0"/>
                        <td align="left" valign="top">
                            <h2>Project</h2>
                            <ul>
                                <li>Add to Debian stable</li>
                                <li>Provide RPM packages</li>
                                <li>Provide Windows setup assistant
                                    (if it still exists/ is still popular by then ;-)</li>
                            </ul>
                        </td>
                        <td align="left" valign="top">
                        </td>
                    </tr>
                    </table>
                </td>
            </tr>
        </table>
        <!--#include virtual="../footer.inc" -->
    </div>
</body>
</html>
